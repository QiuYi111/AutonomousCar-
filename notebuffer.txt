float uint8_to_float(uint8_t* u8arry, int point_length) {
	int points = 0;
	int status = 0;
	int num_length = 0;
	float number = 0;
	int if_neg=0;
	if(u8arry[0]!='-'){
		num_length++;
		if_neg=1;
	}
	for (; num_length < 256; num_length++) {
		if (u8arry[num_length] == '.') {
			points = num_length;
		}
		if (u8arry[num_length] == 'o') {
			status = num_length;
			break;
		}
	}
	if (status == 0) {
		return -1;
	}
	else {
		float tens = 1;

		if (points == 0) {
			for (size_t i= if_neg; i < num_length; i++) {
			number += (float)(u8arry[i] - '0');
			number *= 10;
		}
			}
			else {
				for (int i = if_neg; i <= points + point_length; i++) {
				if (i < points) {
					number += (float)(u8arry[i] - '0');
					number *= 10;
				}
				else if (i > points) {
					tens /= 10;
					number += ((float)(u8arry[i] - '0')) * tens;
				}
				else {
					number /= 10;
				}
				}
			}

		if (points == 0) {
			number /= 10;
		}
		if(if_neg){
			return -number;
		}
		return number;
	}

}
